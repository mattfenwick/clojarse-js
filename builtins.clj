(def specials
  [
    "def",
    "if",
    "do",
    "quote",
    "var",
    "recur",
    "throw",
    "catch",
    "try",
    "monitor-enter",
    "monitor-exit",
    ".",
    "new",
    "set!",
    "fn*",
    "let*",
    "loop*",
    "letfn*",
    "case*",
    "deftype*",
    "reify*",
    "clojure.core/import*",
  ])

(def keywords
  [
    "true",
    "false",
    "nil",
  ])

(def other
  [
    "*1",
    "*2",
    "*3",
    "*clojure-version*",
    "*data-readers*",
    "*default-data-reader-fn*",
    "*e",
    "&",
    "default-data-readers",
    "unquote",
    "unquote-splicing",
  ])

(def macros
  [
    "->",
    "->>",
    "..",
    "add-doc-and-meta",
    "amap",
    "and",
    "areduce",
    "as->",
    "assert",
    "binding",
    "bound-fn",
    "case",
    "comment",
    "cond",
    "cond->",
    "cond->>",
    "condp",
    "declare",
    "definline",
    "defmacro",
    "defmethod",
    "defmulti",
    "defn",
    "defn-",
    "defonce",
    "defstruct",
    "delay",
    "doseq",
    "dosync",
    "dotimes",
    "doto",
    "fn",
    "for",
    "future",
    "if-let",
    "if-not",
    "if-some",
    "import",
    "io!",
    "lazy-cat",
    "lazy-seq",
    "let",
    "letfn",
    "locking",
    "loop",
    "memfn",
    "ns",
    "or",
    "pvalues",
    "refer-clojure",
    "some->",
    "some->>",
    "sync",
    "time",
    "when",
    "when-first",
    "when-let",
    "when-not",
    "when-some",
    "while",
    "with-bindings",
    "with-in-str",
    "with-loading-context",
    "with-local-vars",
    "with-open",
    "with-out-str",
    "with-precision",
    "with-redefs",
  ])

(def funcs
  [
    "*",
    "*'",
    "+",
    "+'",
    "-",
    "-'",
    "/",
    "<",
    "<=",
    "=",
    "==",
    ">",
    ">=",
    "accessor",
    "aclone",
    "add-classpath",
    "add-watch",
    "agent",
    "agent-error",
    "agent-errors",
    "aget",
    "alength",
    "alias",
    "all-ns",
    "alter",
    "alter-meta!",
    "alter-var-root",
    "ancestors",
    "apply",
    "array-map",
    "aset",
    "assoc",
    "assoc!",
    "assoc-in",
    "associative?",
    "atom",
    "await",
    "await-for",
    "await1",
    "bases",
    "bigdec",
    "bigint",
    "biginteger",
    "bit-and",
    "bit-and-not",
    "bit-clear",
    "bit-flip",
    "bit-not",
    "bit-or",
    "bit-set",
    "bit-shift-left",
    "bit-shift-right",
    "bit-test",
    "bit-xor",
    "boolean",
    "boolean-array",
    "booleans",
    "bound-fn*",
    "bound?",
    "butlast",
    "byte",
    "byte-array",
    "bytes",
    "cast",
    "char",
    "char?",
    "char-array",
    "chars",
    "chunk",
    "chunk-append",
    "chunk-buffer",
    "chunk-cons",
    "chunk-first",
    "chunk-next",
    "chunk-rest",
    "chunked-seq?",
    "class",
    "class?",
    "clear-agent-errors",
    "clojure-version",
    "coll?",
    "commute",
    "comp",
    "comparator",
    "compare",
    "compare-and-set!",
    "compile",
    "complement",
    "concat",
    "conj",
    "conj!",
    "cons",
    "constantly",
    "contains?",
    "count",
    "counted?",
    "create-ns",
    "create-struct",
    "cycle",
    "dec",
    "dec'",
    "decimal?",
    "delay?",
    "deliver",
    "denominator",
    "deref",
    "derive",
    "descendants",
    "destructure",
    "disj",
    "disj!",
    "dissoc",
    "dissoc!",
    "distinct",
    "distinct?",
    "doall",
    "dorun",
    "double",
    "double-array",
    "doubles",
    "drop",
    "drop-last",
    "drop-while",
    "empty",
    "empty?",
    "ensure",
    "enumeration-seq",
    "error-handler",
    "error-mode",
    "eval",
    "even?",
    "every-pred",
    "every?",
    "ex-data",
    "ex-info",
    "false?",
    "ffirst",
    "file-seq",
    "filter",
    "filterv",
    "find",
    "find-keyword",
    "find-ns",
    "find-var",
    "first",
    "flatten",
    "float",
    "float-array",
    "float?",
    "floats",
    "flush",
    "fn?",
    "fnext",
    "fnil",
    "force",
    "format",
    "frequencies",
    "future-call",
    "future-cancel",
    "future-cancelled?",
    "future-done?",
    "future?",
    "gensym",
    "get",
    "get-in",
    "get-method",
    "get-thread-bindings",
    "get-validator",
    "group-by",
    "hash",
    "hash-map",
    "hash-ordered-coll",
    "hash-set",
    "hash-unordered-coll",
    "identical?",
    "identity",
    "ifn?",
    "inc",
    "inc'",
    "instance?",
    "int",
    "int-array",
    "ints",
    "integer?",
    "interleave",
    "intern",
    "interpose",
    "into",
    "into-array",
    "isa?",
    "iterate",
    "iterator-seq",
    "juxt",
    "keep",
    "keep-indexed",
    "key",
    "keys",
    "keyword",
    "keyword?",
    "last",
    "line-seq",
    "list",
    "list*",
    "list?",
    "load",
    "load-reader",
    "load-string",
    "loaded-libs",
    "long",
    "long-array",
    "longs",
    "macroexpand",
    "macroexpand-1",
    "make-array",
    "make-hierarchy",
    "map",
    "map-indexed",
    "map?",
    "mapcat",
    "mapv",
    "max",
    "max-key",
    "memoize",
    "merge",
    "merge-with",
    "meta",
    "methods",
    "min",
    "min-key",
    "mix-collection-hash",
    "mod",
    "name",
    "namespace",
    "neg?",
    "newline",
    "next",
    "nfirst",
    "nil?",
    "nnext",
    "not",
    "not-any?",
    "not-empty",
    "not-every?",
    "not=",
    "ns-aliases",
    "ns-imports",
    "ns-interns",
    "ns-map",
    "ns-name",
    "ns-publics",
    "ns-refers",
    "ns-resolve",
    "ns-unalias",
    "ns-unmap",
    "nth",
    "nthnext",
    "nthrest",
    "num",
    "number?",
    "numerator",
    "object-array",
    "odd?",
    "parents",
    "partial",
    "partition",
    "partition-all",
    "partition-by",
    "pcalls",
    "peek",
    "persistent!",
    "pmap",
    "pop",
    "pop!",
    "pop-thread-bindings",
    "pos?",
    "pr",
    "pr-str",
    "prefer-method",
    "prefers",
    "print",
    "print-str",
    "printf",
    "println",
    "println-str",
    "prn",
    "prn-str",
    "promise",
    "push-thread-bindings",
    "quot",
    "rand",
    "rand-int",
    "rand-nth",
    "range",
    "ratio?",
    "rational?",
    "rationalize",
    "re-find",
    "re-groups",
    "re-matcher",
    "re-matches",
    "re-pattern",
    "re-seq",
    "read",
    "read-line",
    "read-string",
    "realized?",
    "reduce",
    "reduce-kv",
    "reduced",
    "reduced?",
    "reductions",
    "ref",
    "ref-history-count",
    "ref-max-history",
    "ref-min-history",
    "ref-set",
    "refer",
    "release-pending-sends",
    "rem",
    "remove",
    "remove-all-methods",
    "remove-method",
    "remove-ns",
    "remove-watch",
    "repeat",
    "repeatedly",
    "replace",
    "replicate",
    "require",
    "reset!",
    "reset-meta!",
    "resolve",
    "rest",
    "restart-agent",
    "resultset-seq",
    "reverse",
    "reversible?",
    "rseq",
    "rsubseq",
    "second",
    "select-keys",
    "send",
    "send-off",
    "send-via",
    "seq",
    "seq?",
    "seque",
    "sequence",
    "sequential?",
    "set",
    "set-agent-send-executor!",
    "set-agent-send-off-executor!",
    "set-error-handler!",
    "set-error-mode!",
    "set-validator!",
    "set?",
    "short",
    "short-array",
    "shorts",
    "shuffle",
    "shutdown-agents",
    "slurp",
    "some",
    "some-fn",
    "some?",
    "sort",
    "sort-by",
    "sorted-map",
    "sorted-map-by",
    "sorted-set",
    "sorted-set-by",
    "sorted?",
    "special-symbol?",
    "spit",
    "split-at",
    "split-with",
    "str",
    "string?",
    "struct",
    "struct-map",
    "subs",
    "subseq",
    "subvec",
    "supers",
    "swap!",
    "symbol",
    "symbol?",
    "take",
    "take-last",
    "take-nth",
    "take-while",
    "test",
    "the-ns",
    "thread-bound?",
    "to-array",
    "to-array-2d",
    "trampoline",
    "transient",
    "tree-seq",
    "true?",
    "type",
    "unchecked-add",
    "unchecked-add-int",
    "unchecked-byte",
    "unchecked-char",
    "unchecked-dec",
    "unchecked-dec-int",
    "unchecked-divide-int",
    "unchecked-double",
    "unchecked-float",
    "unchecked-inc",
    "unchecked-inc-int",
    "unchecked-int",
    "unchecked-long",
    "unchecked-multiply",
    "unchecked-multiply-int",
    "unchecked-negate",
    "unchecked-negate-int",
    "unchecked-remainder-int",
    "unchecked-short",
    "unchecked-subtract",
    "unchecked-subtract-int",
    "underive",
    "unsigned-bit-shift-right",
    "update-in",
    "use",
    "val",
    "vals",
    "var-get",
    "var-set",
    "var?",
    "vary-meta",
    "vec",
    "vector",
    "vector?",
    "with-bindings*",
    "with-meta",
    "with-redefs-fn",
    "xml-seq",
    "zero?",
    "zipmap",
  ])

